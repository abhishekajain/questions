-----------------------------------------------------------------------------------------------------------------------
Important SQL Operator
-----------------------------------------------------------------------------------------------------------------------
1 EXISTS: The EXISTS operator is used to test for the existence of any record in a subquery. The EXISTS operator returns true if the subquery returns one or more records.
	
	The following SQL statement returns TRUE and lists the suppliers with a product price less than 20:
	SELECT SupplierName FROM Suppliers WHERE EXISTS (SELECT ProductName FROM Products WHERE SupplierId = Suppliers.supplierId AND Price < 20);
	
2 ANY and ALL: The ANY and ALL operators are used with a WHERE or HAVING clause. The ANY operator returns true if any of the subquery values meet the condition. The ALL operator returns true if all of the subquery values meet the condition.

	The following SQL statement returns TRUE and lists the productnames if it finds ANY records in the OrderDetails table that quantity > 99:
	SELECT ProductName FROM Products WHERE ProductID = ANY (SELECT ProductID FROM OrderDetails WHERE Quantity > 99);
	
	The following SQL statement returns TRUE and lists the productnames if ALL the records in the OrderDetails table has quantity = 10:
	SELECT ProductName FROM Products WHERE ProductID = ALL (SELECT ProductID FROM OrderDetails WHERE Quantity = 10);
	
	
3 TOP, LIMIT or ROWNUM: The SELECT TOP clause is used to specify the number of records to return. The SELECT TOP clause is useful on large tables with thousands of records. Returning a large number of records can impact on performance.
Note: Not all database systems support the SELECT TOP clause. MySQL supports the LIMIT clause to select a limited number of records, while Oracle uses ROWNUM.
	
	second highest using top and max and inner queires
	SELECT NumOfOders, CustomerID  from (SELECT Count(OrderID) as NumOfOders, CustomerID FROM Orders group by CustomerID order by NumOfOders DESC LIMIT 2)  order by NumOfOders LIMIT 1;

	SELECT Salary FROM (SELECT Salary FROM Employee ORDER BY salary DESC LIMIT 2) AS Emp ORDER BY salary LIMIT 1;
	SELECT MAX(salary) FROM Employee WHERE Salary NOT IN ( SELECT Max(Salary) FROM Employee);
	SELECT MAX(Salary) From Employee WHERE Salary < ( SELECT Max(Salary) FROM Employee);


